#!/bin/bash -eu
#
# Prepare a Raspberry Pi image
#

function out()
{
	if [ -n "${PREFIX}" ] ; then
		partumount "${PREFIX}"/boot/firmware
		partumount "${PREFIX}"
	fi
}

function usage()
{
	cat << EOF
Usage: rpi-prep [-d] [-h] IMAGE

Prepare a Raspberry Pi image.

Positional arguments:
  IMAGE        The image to prepare.

Optional arguments:
  -d, --debug  Enable debug mode.
  -h, --help   Show this help text and exit.
EOF
}

debug=0
image=

while [ "${#}" -gt 0 ] ; do
	case "${1}" in
		-d|--debug)
			debug=1
			;;
		-h|--help)
			usage
			exit
			;;
		*)
			if [ -z "${image}" ] ; then
				image=${1}
			else
				echo "Invalid argument: ${1}" >&2
				exit 2
			fi
			;;
	esac
	shift
done

if [ -z "${image}" ] ; then
	usage
	exit 2
fi

outfile=${image##*/}
outfile=${outfile%.img*}+prep.img

case "${image}" in
	*.img.xz)
		echo "-- Decompress image"
		xzcat "${image}" > "${outfile}"
		;;
	*.img)
		echo "-- Copy image"
		cp "${image}" "${outfile}"
		;;
	*)
		echo "Unsupported image file format" >&2
		exit 1
		;;
esac

PREFIX=
trap out EXIT INT TERM HUP

PREFIX=$(partmount -b "${outfile}" 2)
partmount "${outfile}" 1 "${PREFIX}"/boot/firmware

here=$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)
sudo "${here}"/rpi-install -p "${PREFIX}"
sudo "${here}"/rpi-config -p "${PREFIX}"

if [ "${debug}" -eq 1 ] ; then
	echo "-- Enter debug mode (type 'exit' to continue)"
	sudo chroot "${PREFIX}"
fi

partumount "${PREFIX}"/boot/firmware
partumount "${PREFIX}"
PREFIX=

echo "-- Compress image"
gzip -f -S .gz "${outfile}"

echo "-- Created image ${outfile}.gz"
