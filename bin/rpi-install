#!/bin/sh -eu
#
# Install the Raspberry Pi OS installer
#

out()
{
	rc=$?

	if [ "${rc}" -ne 0 ] ; then
		echo "** Error: Script failed" >&2
	fi
}

usage()
{
	cat <<EOF
Usage: rpi-install [-b DIR] [-h] [-r] [INSTALLER]

Install (or reboot into) the Raspberry Pi OS installer.

Positional arguments:
  INSTALLER       The installer tarball. If not provided, download and install
                  the installer tarball from github.

Optional arguments:
  -b, --boot DIR  Install the installer to <DIR> instead of /boot/ (or
                  /boot/firmware/).
  -h, --help      Show this help text and exit.
  -r, --reboot    Reboot into the installer.
EOF
}

github_url=https://github.com/juergh/rpi-install
boot_dir=
reboot=0
installer=

while [ "${#}" -gt 0 ] ; do
	case "${1}" in
		-b|--boot)
			shift
			boot_dir=${1}
			;;
		-h|--help)
			usage
			exit
			;;
		-r|--reboot)
			reboot=1
			;;
		-*)
			echo "** Error: Invalid argument: ${1}" >&2
			exit 1
			;;
		*)
			if [ -z "${installer}" ] ; then
				installer=${1}
			else
				echo "** Error: Invalid argument: ${1}" >&2
				exit 1
			fi
			;;
	esac
	shift
done

if [ "${reboot}" -eq 1 ] ; then
	echo "-- Reboot into installer"
	reboot "0 tryboot"
fi

# Find the boot directory
if [ -z "${boot_dir}" ] ; then
	if [ -d /boot/firmware ] ; then
		boot_dir=/boot/firmware
	else
		boot_dir=/boot
	fi
fi

# Verify the boot directory
if ! [ -e "${boot_dir}"/config.txt ] ; then
	echo "** Error: Invalid boot directory: ${boot_dir}" >&2
	exit 1
fi
echo "-- Use boot directory ${boot_dir}"

if [ -n "${installer}" ] ; then
	# Check if the provided installer file exists
	if ! [ -e "${installer}" ] ; then
		echo "** Error: No such installer: ${installer}" >&2
		exit 1
	fi

	# Unpack the provided installer
	rm -rf "${boot_dir}/install"
	echo "-- Install ${installer}"
	installer=$(readlink -f "${installer}")
	tar -C "${boot_dir}" -xzf "${installer}"

else
	# Check if the remote installer exists
	url=${github_url}/raw/main/release/rpi-install.tgz
	if ! wget -q --spider "${url}" ; then
		echo "** Error: No such remote file: ${url}" >&2
		exit 1
	fi

	# Download and unpack the installer
	rm -rf "${boot_dir}/install"
	echo "-- Install ${url}"
	wget -q -O - "${url}" | tar -C "${boot_dir}" -xzf -
fi

# Temporary hack to support Pi Zero 2 until all kernels and images catch up
if ! [ -e "${boot_dir}"/bcm2710-rpi-zero-2.dtb ] ; then
	echo "-- Copy bcm2710-rpi-zero-2.dtb"
	cp "${boot_dir}"/install/bcm2710-rpi-zero-2.dtb "${boot_dir}"
fi

# Modify config.txt
echo "-- Modify config.txt"
sed -i '/^# rpi-install INSTALL BEGIN$/,/^# rpi-install INSTALL END$/d' \
	"${boot_dir}"/config.txt
cat << EOF >> "${boot_dir}"/config.txt

# rpi-install INSTALL BEGIN
[all]
[gpio4=0]
include install/config.txt
# rpi-install INSTALL END
EOF

# Add tryboot.txt
echo "-- Add tryboot.txt"
cat << EOF > "${boot_dir}"/tryboot.txt
# rpi-install INSTALL BEGIN
include install/config.txt
# rpi-install INSTALL END
EOF

# Update ourselves
if [ -z "${installer}" ] ; then
	url=${github_url}/raw/main/bin/rpi-install
	if ! wget -q --spider "${url}" ; then
		echo "** Error: No such remote file: ${url}" >&2
		exit 1
	fi

	# Download ourselves
	echo "-- Install ${url}"
	destfile=$(which rpi-install || echo "/usr/bin/rpi-install")
	wget -q -O "${destfile}" "${url}"
	chmod 755 "${destfile}"
fi
